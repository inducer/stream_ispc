* STREAM Bandwidth Example for ISPC

This repository contains John D. McCalpin's [[https://www.cs.virginia.edu/stream/][STREAM benchmark]] and a
port of that benchmark to ISPC.  The port to ISPC also uses dynamic
memory allocation.

** Building

   There is a =Makefile= provided to build the two benchmark codes.
   You may need to edit the =Makefile= to adjust compilers and
   compiler flags for your system.  To build just run =make= and the
   executable files =build/stream= and =build/stream_ispc= should be
   built.

** Performance Results (aka =icc= vs =ispc=)

   I compared =build/stream= and =build/stream_ispc= on a dual socket
   Xeon CPU E5-2698 v3 system.  I used the following build flags

   #+BEGIN_SRC
   CC=icc
   CFLAGS=-std=gnu99 -g -xHOST -O3 -ffreestanding -openmp

   CXX=icpc
   CXXFLAGS=-g -xHOST -O3 -ffreestanding -openmp -DISPC_USE_OMP

   ISPC = ispc
   ISPCFLAGS = --target=avx2-i32x8 --pic --opt=force-aligned-memory --werror
   #+END_SRC

   Here is the version information for the compilers we are using:

   #+BEGIN_SRC sh :exports both
   icc --version
   #+END_SRC
   #+results:
   : icc (ICC) 16.0.1 20151021
   : Copyright (C) 1985-2015 Intel Corporation.  All rights reserved.

   #+BEGIN_SRC sh :exports both
   ispc --version
   #+END_SRC
   #+results:
   : Intel(r) SPMD Program Compiler (ispc), 1.9.0 (build commit 89dfbf2125fc2cba @ 20160212, LLVM 3.8)

   Here is the output from the STREAM benchmark compiled with =icc=:
   #+BEGIN_SRC sh :exports both
   OMP_PLACES=cores OMP_DISPLAY_ENV=true ./build/stream
   #+END_SRC
   #+results:
   : -------------------------------------------------------------
   : STREAM version $Revision: 5.10 $
   : -------------------------------------------------------------
   : This system uses 4 bytes per array element.
   : -------------------------------------------------------------
   : Array size = 80000000 (elements), Offset = 0 (elements)
   : Memory per array = 305.2 MiB (= 0.3 GiB).
   : Total memory required = 915.5 MiB (= 0.9 GiB).
   : Each kernel will be executed 10 times.
   :  The *best* time for each kernel (excluding the first iteration)
   :  will be used to compute the reported bandwidth.
   : -------------------------------------------------------------
   : 
   : OPENMP DISPLAY ENVIRONMENT BEGIN
   :    _OPENMP='201307'
   :   [host] OMP_CANCELLATION='FALSE'
   :   [host] OMP_DISPLAY_ENV='TRUE'
   :   [host] OMP_DYNAMIC='FALSE'
   :   [host] OMP_MAX_ACTIVE_LEVELS='2147483647'
   :   [host] OMP_NESTED='FALSE'
   :   [host] OMP_NUM_THREADS: value is not defined
   :   [host] OMP_PLACES='cores'
   :   [host] OMP_PROC_BIND='spread'
   :   [host] OMP_SCHEDULE='static'
   :   [host] OMP_STACKSIZE='4M'
   :   [host] OMP_THREAD_LIMIT='2147483647'
   :   [host] OMP_WAIT_POLICY='PASSIVE'
   : OPENMP DISPLAY ENVIRONMENT END
   : 
   : 
   : Number of Threads requested = 32
   : Number of Threads counted = 32
   : -------------------------------------------------------------
   : Your clock granularity/precision appears to be 1 microseconds.
   : Each test below will take on the order of 5419 microseconds.
   :    (= 5419 clock ticks)
   : Increase the size of the arrays if this shows that
   : you are not getting at least 20 clock ticks per test.
   : -------------------------------------------------------------
   : WARNING -- The above is only a rough guideline.
   : For best results, please be sure you know the
   : precision of your system timer.
   : -------------------------------------------------------------
   : Function    Best Rate MB/s  Avg time     Min time     Max time
   : Copy:          104902.7     0.006141     0.006101     0.006308
   : Scale:         106522.0     0.006039     0.006008     0.006146
   : Add:           112215.9     0.008605     0.008555     0.008762
   : Triad:         112097.2     0.008595     0.008564     0.008710
   : -------------------------------------------------------------
   : Solution Validates: avg error less than 1.000000e-06 on all three arrays
   : Results Validation Verbose Results:
   :     Expected a(1), b(1), c(1): 1153300692992.000000 230660145152.000000 307546849280.000000
   :     Observed a(1), b(1), c(1): 1153300824064.000000 230660161536.000000 307546882048.000000
   :     Rel Errors on a, b, c:     1.136495e-07 7.103091e-08 1.065464e-07
   : -------------------------------------------------------------


   Here is the output from the modified STREAM benchmark with kernels
   compiled with =ispc=:
   #+BEGIN_SRC sh :exports both
   OMP_PLACES=cores OMP_DISPLAY_ENV=true ./build/stream_ispc
   #+END_SRC
   #+results:
   : Array size = 80000000 (elements)
   : Memory per array = 305.2 MiB (= 0.3 GiB).
   : Total memory required = 915.5 MiB (= 0.9 GiB).
   : Chunk size: 16384
   : Page size: 4096
   : Cache line size: 64
   : sizeof(STREAM_TYPE): 4
   : Each kernel will be executed 10 times.
   :  The *best* time for each kernel (excluding the first iteration)
   :  will be used to compute the reported bandwidth.
   : -------------------------------------------------------------
   : 
   : OPENMP DISPLAY ENVIRONMENT BEGIN
   :    _OPENMP='201307'
   :   [host] OMP_CANCELLATION='FALSE'
   :   [host] OMP_DISPLAY_ENV='TRUE'
   :   [host] OMP_DYNAMIC='FALSE'
   :   [host] OMP_MAX_ACTIVE_LEVELS='2147483647'
   :   [host] OMP_NESTED='FALSE'
   :   [host] OMP_NUM_THREADS: value is not defined
   :   [host] OMP_PLACES='cores'
   :   [host] OMP_PROC_BIND='spread'
   :   [host] OMP_SCHEDULE='static'
   :   [host] OMP_STACKSIZE='4M'
   :   [host] OMP_THREAD_LIMIT='2147483647'
   :   [host] OMP_WAIT_POLICY='PASSIVE'
   : OPENMP DISPLAY ENVIRONMENT END
   : 
   : 
   : -------------------------------------------------------------
   : Each test below will take on the order of 6482 microseconds.
   : -------------------------------------------------------------
   : -------------------------------------------------------------
   : Function    Best Rate MB/s  Avg time     Min time     Max time
   : Copy:           75179.7     0.008546     0.008513     0.008603
   : Scale:          73558.4     0.008729     0.008701     0.008792
   : Add:            83152.5     0.011573     0.011545     0.011613
   : Triad:          83805.1     0.011485     0.011455     0.011520
   : -------------------------------------------------------------
   : Solution Validates: avg error less than 1.000000e-06 on all three arrays
   : Results Validation Verbose Results:
   :     Expected a(1), b(1), c(1): 1153300692992.000000 230660145152.000000 307546849280.000000
   :     Observed a(1), b(1), c(1): 1153300824064.000000 230660161536.000000 307546882048.000000
   :     Rel Errors on a, b, c:     1.136495e-07 7.103091e-08 1.065464e-07
   : -------------------------------------------------------------

   As we can see the =icc= version is about 1.3x faster than the
   =ispc= version.  I tried various memory alignment procedures but
   could not improve the performance of the =ispc= version of the
   benchmark.
